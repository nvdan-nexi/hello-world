pool:
  vmImage: ubuntu-latest

#parameters:
#  - name: environment
#    displayName: PiaSDK-Environment
#    type: string
#    default: PiaSDK-Variables-Debug
#    values:
#    - PiaSDK-Variables-Debug
#    - PiaSDK-Variables-Bugfix
#    - PiaSDK-Variables-Hotfix
#    - PiaSDK-Variables-Release
variables:
  - ${{ if eq( variables['Build.SourceBranchName'], 'master' ) }}:
      - group: PiaSDK-Variables-Release
  - ${{ if eq( variables['Build.SourceBranchName'], 'develop' ) }}:
      - group: PiaSDK-Variables-Debug
  - ${{ if contains(variables['Build.SourceBranchName'], 'feature' )}}:
      - group: PiaSDK-Variables-Feature
  - ${{ if contains(variables['Build.SourceBranch'], 'refs/pull' )}}:
      - group: PiaSDK-Variables-Feature
  - ${{ if contains(variables['Build.SourceBranchName'], 'bugfix' )}}:
      - group: PiaSDK-Variables-bugfix

trigger:
  - refs/pull/*/head
  - master
  - develop
  - azure-develop # remove once sample works

pr:
  branches:
    include:
      - master
      - develop
      - azure-develop
      - feature-*
      - bugfix-*
      - hotfix-*

jobs:
  - job: MyJob
    condition: or(
                eq(variables['Build.SourceBranchName'], 'master'),
                eq(variables['Build.SourceBranchName'], 'develop'),
                contains(variables['Build.SourceBranchName'], 'bugfix'),
                contains(variables['System.PullRequest.SourceBranch'], 'feature'))
    continueOnError: false
    steps:
    - script: |
        echo "Build Environment Current Name - $(System.PullRequest.SourceBranch) ,   buildConfiguration -  $(buildConfiguration)"

    #    ./devops/execute.sh build
    #    ./devops/execute.sh run
      displayName: 'Build Environment'

#- script: |
#    echo "Cleaning cache and build"
#    ./devops/execute.sh command clean
#  displayName: 'Pre-setup'
#
#- script: |
#    echo "Running Tests"
#    ./devops/execute.sh command test
#  displayName: 'Run Tests'
#
#- script: |
#    echo "Build Source Code as $(buildConfiguration)"
#    ./devops/execute.sh command assembleRelease
#  condition: and(succeeded(), eq(variables.buildConfiguration, 'release'))
#  displayName: 'Build Source Code'
#
#- script: |
#    echo "Build Source Code as $(buildConfiguration)"
#    ./devops/execute.sh command assembleDebug
#  condition: and(succeeded(), eq(variables.buildConfiguration, 'debug'))
#  displayName: 'Build Source Code'
#
#
#- script: |
#    echo "Extract Build"
#    ./devops/execute.sh extract
#  displayName: 'Extract Build'
#
#
#- script: |
#    echo "Removing used resources"
#    ./devops/execute.sh remove
#  displayName: 'Cleanup'
#
#- task: CopyFiles@2
#  inputs:
#    SourceFolder: '$(system.defaultworkingdirectory)'
#    Contents: '**/*.apk'
#    TargetFolder: '$(build.artifactstagingdirectory)'
#  displayName: 'Copy File to : $(build.artifactstagingdirectory)'
#
#
#- task: PublishBuildArtifacts@1
#  inputs:
#    PathtoPublish: '$(build.artifactstagingdirectory)'
#  displayName: 'Publish to Artifact'

    - script: |
        echo "Try to trigger test automation pipeline $(System.PullRequest.SourceBranch)"
      condition: and(succeeded(), contains(variables['System.PullRequest.SourceBranch'], 'feature'))
      displayName: 'Trigger Automation testing'